#!/usr/bin/env bash

curr_dir=$(readlink -e `dirname $0`)

set -e
#set -x
set -u


if [ -e $HOME/.confluencer.conf ]
then
  source $HOME/.confluencer.conf 
else 
  source $curr_dir/confluencer.conf
fi

confluence_page_title="$1"
input_html_path="$2"
tmp_intermediate_html=$(tempfile -s .confluencer.intermediate.html)
tmp_json_path=$(tempfile -s .confluencer.sent.json)
tmp_response=$(tempfile -s .confluencer.response.json)

cat "$input_html_path" | grep -v '!DOCTYPE' > "$tmp_intermediate_html.tmp"

function fn_exists() {
  [ `type -t $1`"" == 'function' ]
}

if fn_exists html_process
then
  echo "Applying DEFINED html_process..." 
  html_process $tmp_intermediate_html.tmp $tmp_intermediate_html
  rm $tmp_intermediate_html.tmp
else
  echo "Applying NO html_process..." 
  mv $tmp_intermediate_html.tmp $tmp_intermediate_html
fi

echo "html($input_html_path) -> html($tmp_intermediate_html) -> json($tmp_json_path)..."
python $curr_dir/html_to_confluence_json.py "$confluence_space" "$tmp_intermediate_html" "$confluence_page_title" "$confluence_page_ancestor" > "$tmp_json_path"

echo "Publishing json($tmp_json_path)..."
curl -v -u "$confluence_user" -X POST -H 'Content-Type: application/json' --data-binary "@$tmp_json_path" "$confluence_url/rest/api/content/" -o $tmp_response

if [ "$?" == "0" ]
then
  cat "$tmp_response" | python -m json.tool
  tinyui=$(cat "$tmp_response" | python -c 'import json,sys;l=json.load(sys.stdin)["_links"]; print l["base"] + l["tinyui"]')
  echo ""
  echo ""
  echo "Parent        : $confluence_url/pages/viewpage.action?pageId=$confluence_page_ancestor"
  echo "Page (name)   : $confluence_url/display/$confluence_space/$confluence_page_title"
  echo "Page (tinyui) : $tinyui"
  echo ""
  echo ""
else
  cat "$tmp_response"
  echo "Something went wrong!!!"
fi

 

